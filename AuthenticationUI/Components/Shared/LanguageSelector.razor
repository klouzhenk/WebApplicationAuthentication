@inject NavigationManager NavigationManager
@inject IConfiguration Configuration 
@inject IStringLocalizer<App> Localizer 

@if (cultures != null && cultures.Any())
{
    <form class="user-select-form">
        <select class="form-control mr-2" @onchange="RequestCultureChange">
            @foreach (var culture in cultures)
            {
                @if (selectedCulture.Equals(culture.Key))
                {
                    <option value="@culture.Key" selected>@Localizer[culture.Value].Value</option>
                }
                else
                {
                    <option value="@culture.Key">@Localizer[culture.Value].Value</option>
                }
            }
        </select>
    </form>
}

@code {
    protected string selectedCulture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;

    protected Dictionary<string, string> cultures;

    protected override void OnInitialized()
    {
        cultures = Configuration.GetSection("Cultures")
            .GetChildren().ToDictionary(x => x.Key, x => x.Value);
    }

    protected async Task RequestCultureChange(ChangeEventArgs e)
    {
        if (selectedCulture.Equals(e.Value.ToString())) return;
        selectedCulture = e.Value.ToString();
        if (string.IsNullOrWhiteSpace(selectedCulture)) return;

        var uri = new Uri(NavigationManager.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
        var query = $"?culture={Uri.EscapeDataString(selectedCulture)}&" +
                $"redirectUri={Uri.EscapeDataString(uri)}";
        NavigationManager.NavigateTo("/Culture/SetCulture" + query, forceLoad: true);
        await InvokeAsync(StateHasChanged);
    }
}
