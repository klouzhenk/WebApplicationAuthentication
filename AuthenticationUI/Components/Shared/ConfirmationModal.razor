@using Microsoft.AspNetCore.Components

<!-- Модальне вікно з використанням Bootstrap -->
<div class="modal @ModalClass" tabindex="-1" role="dialog" style="@(IsVisible ? "display: block;" : "display: none;")">
    <!-- Діалогове вікно -->
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="close" aria-label="Close" @onclick="CloseModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>@Message</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="CancelAction">Cancel</button>
                <button type="button" class="btn btn-primary" @onclick="ConfirmAction">OK</button>
            </div>
        </div>
    </div>
</div>

@code {
    // Параметри, які можуть бути встановлені з зовнішнього коду
    [Parameter] public string Title { get; set; } // Заголовок модального вікна
    [Parameter] public string Message { get; set; } // Повідомлення у тілі модального вікна
    [Parameter] public EventCallback<bool> OnConfirm { get; set; } // Callback для підтвердження дії
    [Parameter] public bool IsVisible { get; set; } // Показник видимості модального вікна
    [Parameter] public EventCallback OnCancel { get; set; } // Callback для скасування дії

    private string ModalClass => IsVisible ? "show" : "";

    private async Task ConfirmAction()
    {
        await OnConfirm.InvokeAsync(true); // Виклик callback для підтвердження
        CloseModal();
    }

    private async Task CancelAction()
    {
        await OnCancel.InvokeAsync(); // Виклик callback для скасування
        CloseModal();
    }

    // Метод для закриття модального вікна
    private void CloseModal()
    {
        IsVisible = false;
        StateHasChanged(); // Оновлення стану компонента
    }
}
