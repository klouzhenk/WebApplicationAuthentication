@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

<div class="modal-backdrop @(IsVisible ? "show" : "")" @onclick="CloseModal"></div>
<div class="modal @(IsVisible ? "show" : "")" tabindex="-1" role="dialog">
    <div class="modal-content" role="document" @onclick="PreventCloseOnContentClick">
        <div class="modal-header">
            <h5 class="modal-title">@Title</h5>
            <button type="button" class="close" aria-label="Close" @onclick="CloseModal">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <p>@Message</p>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" @onclick="CancelAction">Cancel</button>
            <button type="button" class="btn btn-primary" @onclick="ConfirmAction">OK</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public string Message { get; set; }
    [Parameter] public EventCallback<bool> OnConfirm { get; set; }
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private async Task ConfirmAction()
    {
        await OnConfirm.InvokeAsync(true);
        CloseModal();
    }

    private async Task CancelAction()
    {
        await OnCancel.InvokeAsync();
        CloseModal();
    }

    private void CloseModal()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private void PreventCloseOnContentClick(MouseEventArgs e)
    {
        // Запобігти закриттю модального вікна при натисканні всередині контенту
        // Нічого не робимо тут, просто щоб залишити простір для обробки натискань на фон
    }
}