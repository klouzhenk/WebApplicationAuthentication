@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop

<div class="modal__backdrop @(IsVisible ? "show" : "")" @onclick="CancelAction"></div>
<div class="modal @(IsVisible ? "show" : "")" tabindex="-1" role="dialog">
    <div class="modal__header">
        <h5 class="modal__text modal__title">@Title</h5>
    </div>
    <div class="modal__body">
        <p class="modal__text">@Message</p>
    </div>
    <div class="modal__footer">
        <button type="button" class="modal__button modal__text" @onclick="CancelAction">Cancel</button>
        <button type="button" class="modal__button modal__text" @onclick="ConfirmAction">OK</button>
    </div>
</div>

@code {
    [Inject] private IJSRuntime JSRuntime { get; set; }

    [Parameter] public string Title { get; set; }
    [Parameter] public string Message { get; set; }
    [Parameter] public EventCallback<bool> OnConfirm { get; set; }
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private async Task ConfirmAction()
    {
        await OnConfirm.InvokeAsync(true);
        await CloseModal();
    }

    private async Task CancelAction()
    {
        await OnCancel.InvokeAsync();
        await CloseModal();
    }

    private async Task CloseModal()
    {
        IsVisible = false;
        StateHasChanged();
    }
}